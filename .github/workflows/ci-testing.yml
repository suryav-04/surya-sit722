name: CI - Stage 1 (Testing Branch)

on:
  push:
    branches:
      - testing   # Trigger only on testing branch

env:
  ACR: ${{ secrets.ACR_LOGIN_SERVER }}
  IMAGE_TAG: ${{ github.sha }}
  DATABASE_URL: postgresql://testuser:testpassword@localhost:5432/testdb

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U testuser"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # ---------- Backend Tests (Python + pytest) ----------
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies for backend
        run: |
          pip install -r backend/customer_service/requirements.txt
          pip install -r backend/order_service/requirements.txt
          pip install -r backend/product_service/requirements.txt
          pip install pytest psycopg2-binary

      - name: Run backend tests
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
        run: |
          pytest backend/customer_service/tests --maxfail=1 --disable-warnings -q
          pytest backend/order_service/tests --maxfail=1 --disable-warnings -q
          pytest backend/product_service/tests --maxfail=1 --disable-warnings -q

      # ---------- Azure & ACR ----------
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: ACR Login
        run: az acr login --name ${{ env.ACR }}

      # ---------- Docker Build ----------
      - name: Build Docker images
        run: |
          docker build -t $ACR/frontend:${IMAGE_TAG} ./frontend
          docker build -t $ACR/customer_service:${IMAGE_TAG} ./backend/customer_service
          docker build -t $ACR/order_service:${IMAGE_TAG} ./backend/order_service
          docker build -t $ACR/product_service:${IMAGE_TAG} ./backend/product_service

      # ---------- Docker Push ----------
      - name: Push Docker images
        run: |
          docker push $ACR/frontend:${IMAGE_TAG}
          docker push $ACR/customer_service:${IMAGE_TAG}
          docker push $ACR/order_service:${IMAGE_TAG}
          docker push $ACR/product_service:${IMAGE_TAG}
