name: CI-CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Login to Azure
      - name: Azure CLI login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Azure ACR Login
        run: az acr login --name sit72210dacr123

      # Build and push backend services
      - name: Build & Push Customer Service
        run: |
          docker build -t sit72210dacr123.azurecr.io/customer_service:latest -f ./backend/customer_service/Dockerfile ./backend
          docker push sit72210dacr123.azurecr.io/customer_service:latest

      - name: Build & Push Order Service
        run: |
          docker build -t sit72210dacr123.azurecr.io/order_service:latest -f ./backend/order_service/Dockerfile ./backend
          docker push sit72210dacr123.azurecr.io/order_service:latest

      - name: Build & Push Product Service
        run: |
          docker build -t sit72210dacr123.azurecr.io/product_service:latest -f ./backend/product_service/Dockerfile ./backend
          docker push sit72210dacr123.azurecr.io/product_service:latest

      - name: Build & Push Frontend
        run: |
          docker build -t sit72210dacr123.azurecr.io/frontend:latest ./frontend
          docker push sit72210dacr123.azurecr.io/frontend:latest

  deploy-staging:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Azure CLI login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        run: az aks get-credentials --resource-group SIT722-9-2C-RG --name sit722akscluster --overwrite-existing

      - name: Create staging namespace
        run: kubectl create namespace staging || echo "Namespace already exists"

      - name: Deploy to AKS
        run: kubectl apply -f k8s/ -n staging

      - name: Wait for pods
        run: kubectl rollout status deployment/frontend -n staging --timeout=120s

      - name: Verify services
        run: kubectl get svc -n staging

  cleanup:
    runs-on: ubuntu-latest
    if: always()
    needs: deploy-staging
    steps:
      - name: Azure CLI login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        run: az aks get-credentials --resource-group SIT722-9-2C-RG --name sit722akscluster --overwrite-existing

      - name: Delete staging namespace
        run: kubectl delete namespace staging || echo "Already deleted"
